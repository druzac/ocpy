ocaml first_pass.ml < sample.py | ocaml tokenize.ml
Beginning to parse...
(KEYWORD def)
(ID "fact")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "x")
(PUNCT "==")
(PUNCT "-")
(LIT 1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 1.j")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "x")
(PUNCT "==")
(LIT 0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "x")
(PUNCT "*")
(ID "fact")
(PUNCT "(")
(ID "x")
(PUNCT "-")
(LIT 1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "s")
(PUNCT "=")
(LIT "foo\\ \n\'\""")
(NEWLINE)
(ID "fact")
(PUNCT "(")
(LIT 20")
(PUNCT ")")
(NEWLINE)
(ENDMARKER)
Finished Parsing