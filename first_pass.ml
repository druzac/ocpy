# 3 "first_pass.mll"
 

    exception End_of_file
    exception Lex_Error

    let emit_c arg =
        print_char arg

    let emit_s arg =
        print_string arg

# 14 "first_pass.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\253\255\254\255\255\255\001\000\004\000\005\000\008\000\
    \011\000\251\255\252\255\009\000\254\255\012\000\255\255\013\000\
    \253\255\014\000\252\255\253\255\254\255\015\000\255\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\001\000\001\000\255\255\255\255\
    \255\255\255\255\255\255\004\000\255\255\004\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\002\000\255\255";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\000\000\006\000\255\255\006\000\255\255\
    \009\000\000\000\000\000\255\255\000\000\015\000\000\000\015\000\
    \000\000\019\000\000\000\000\000\000\000\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\005\000\003\000\003\000\005\000\007\000\003\000\003\000\
    \007\000\007\000\003\000\016\000\007\000\012\000\014\000\014\000\
    \020\000\022\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\000\000\000\000\004\000\007\000\000\000\000\000\006\000\
    \007\000\000\000\000\000\006\000\000\000\010\000\013\000\000\000\
    \000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\
    \000\000\000\000\021\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\018\000\000\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\004\000\000\000\005\000\005\000\006\000\
    \005\000\007\000\007\000\011\000\007\000\008\000\013\000\015\000\
    \017\000\021\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\005\000\255\255\255\255\005\000\
    \007\000\255\255\255\255\007\000\255\255\008\000\008\000\255\255\
    \255\255\255\255\008\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\008\000\
    \255\255\255\255\017\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\004\000\255\255\255\255\255\255\006\000\255\255\255\255\
    \255\255\255\255\255\255\008\000\013\000\015\000\017\000\255\255\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec start_line lexbuf =
    __ocaml_lex_start_line_rec lexbuf 0
and __ocaml_lex_start_line_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 23 "first_pass.mll"
                                      ( start_line lexbuf)
# 121 "first_pass.ml"

  | 1 ->
# 24 "first_pass.mll"
                                      ( emit_s (Lexing.lexeme lexbuf); in_line lexbuf)
# 126 "first_pass.ml"

  | 2 ->
# 28 "first_pass.mll"
                                      ( raise End_of_file)
# 131 "first_pass.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_start_line_rec lexbuf __ocaml_lex_state

and in_line lexbuf =
    __ocaml_lex_in_line_rec lexbuf 8
and __ocaml_lex_in_line_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 31 "first_pass.mll"
                                      ( emit_c '\n'; start_line lexbuf)
# 142 "first_pass.ml"

  | 1 ->
# 32 "first_pass.mll"
                                      ( emit_c '\n'; start_line lexbuf)
# 147 "first_pass.ml"

  | 2 ->
# 33 "first_pass.mll"
                                      ( in_line lexbuf)
# 152 "first_pass.ml"

  | 3 ->
# 34 "first_pass.mll"
                                      ( emit_s (Lexing.lexeme lexbuf); s_string lexbuf)
# 157 "first_pass.ml"

  | 4 ->
# 35 "first_pass.mll"
                                      ( emit_s (Lexing.lexeme lexbuf); in_line lexbuf)
# 162 "first_pass.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_in_line_rec lexbuf __ocaml_lex_state

and s_string lexbuf =
    __ocaml_lex_s_string_rec lexbuf 17
and __ocaml_lex_s_string_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 39 "first_pass.mll"
                                      ( s_string lexbuf )
# 173 "first_pass.ml"

  | 1 ->
# 40 "first_pass.mll"
                                      ( raise Lex_Error "Unescaped newline in short string")
# 178 "first_pass.ml"

  | 2 ->
# 41 "first_pass.mll"
                                    ( emit_s (Lexing.lexeme lexbuf); s_string lexbuf)
# 183 "first_pass.ml"

  | 3 ->
# 42 "first_pass.mll"
                                    ( raise Lex_Error "EOF while scanning string")
# 188 "first_pass.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_s_string_rec lexbuf __ocaml_lex_state

;;

# 47 "first_pass.mll"
 
let rec parse lexbuf =
    let token = start_line lexbuf
    in
    (* do * nothing * in * this * example * *)
    parse lexbuf

let main () =
    let cin = 
        if Array.length Sys.argv > 1 then open_in Sys.argv.(1)
        else stdin in
    let lexbuf = Lexing.from_channel cin in
    try parse lexbuf
    with End_of_file -> ()

let _ = print_string "Beginning to parse...\n"
let _ = Printexc.print main ()

# 213 "first_pass.ml"
